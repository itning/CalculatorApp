<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>